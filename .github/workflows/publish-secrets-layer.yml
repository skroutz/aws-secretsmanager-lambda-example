name: Publish Lambda Secrets Layer
on:
  push:
    branches:
      - "main"
      - "master"
    paths:
      - 'secrets-layer/**'
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1
  LAMBDA_SECRETS_LAYER: 'secretsmanager-lambda-example-secrets-layer'
  ASSUME_ROLE: 'SkroutzSecretExampleLambdaDeployerRole'
permissions:
  contents: read

jobs:
  deploy-secrets-layer:
    name: Publish Secrets Layer Version
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: 'Checkout Source Code'
        uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ASSUME_ROLE }}
          role-duration-seconds: 900

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18.3'
      
      - name: Build Go Script
        run: |
          go version
          cd ./secrets-layer
          go get .
          go mod verify
          go build -o get-secret
          cd ..
      
      - name: Zip Function Artifacts
        env:
          release_id: ${{ format('aws-secretsmanager-lambda-example-{0}-layer.zip', github.head_ref )}}
        run: |
          mkdir build 
          zip -r ./build/$release_id ./secrets-layer

      - name: Update Lambda Function Code
        env:
          release_id: ${{ format('aws-secretsmanager-lambda-example-{0}-layer.zip', github.head_ref )}}
        run: |
          aws lambda publish-layer-version --layer-name "${LAMBDA_SECRETS_LAYER}" --zip-file fileb://build/$release_id
          rm -r ./build